# Script para configurar la contrase√±a de la base de datos de Supabase
# Uso: .\setup-database-password.ps1

Write-Host "üîê Configurador de Contrase√±a de Base de Datos Supabase" -ForegroundColor Magenta
Write-Host "=" * 60 -ForegroundColor Magenta

Write-Host ""
Write-Host "üìã Para obtener la contrase√±a de la base de datos:" -ForegroundColor Blue
Write-Host "1. Ve a https://supabase.com/dashboard/project/aozysydpwvkkdvhfsvsu" -ForegroundColor Cyan
Write-Host "2. Ve a Settings > Database" -ForegroundColor Cyan
Write-Host "3. Busca 'Connection string' o 'Database Password'" -ForegroundColor Cyan
Write-Host "4. Copia la contrase√±a" -ForegroundColor Cyan
Write-Host ""

# Solicitar contrase√±a de forma segura
$dbPassword = Read-Host "üîí Ingresa la contrase√±a de la base de datos" -AsSecureString
$dbPasswordPlain = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($dbPassword))

if ([string]::IsNullOrWhiteSpace($dbPasswordPlain)) {
    Write-Host "‚ùå La contrase√±a no puede estar vac√≠a" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üìù Actualizando .env.local..." -ForegroundColor Blue

# Leer archivo .env.local
$envPath = ".env.local"
if (-not (Test-Path $envPath)) {
    Write-Host "‚ùå No se encontr√≥ .env.local" -ForegroundColor Red
    exit 1
}

$envContent = Get-Content $envPath

# Actualizar URLs de base de datos
for ($i = 0; $i -lt $envContent.Count; $i++) {
    if ($envContent[$i] -match '^DATABASE_URL=') {
        $envContent[$i] = "DATABASE_URL=`"postgresql://postgres.aozysydpwvkkdvhfsvsu:$dbPasswordPlain@aws-0-sa-east-1.pooler.supabase.com:6543/postgres?pgbouncer=true&connection_limit=1`""
        Write-Host "‚úÖ DATABASE_URL actualizada" -ForegroundColor Green
    }
    elseif ($envContent[$i] -match '^DIRECT_URL=') {
        $envContent[$i] = "DIRECT_URL=`"postgresql://postgres.aozysydpwvkkdvhfsvsu:$dbPasswordPlain@aws-0-sa-east-1.pooler.supabase.com:5432/postgres`""
        Write-Host "‚úÖ DIRECT_URL actualizada" -ForegroundColor Green
    }
}

# Guardar archivo
$envContent | Out-File -FilePath $envPath -Encoding UTF8

Write-Host ""
Write-Host "üß™ Probando conexi√≥n..." -ForegroundColor Blue

# Probar conexi√≥n con Node.js
if (Test-Path "test-supabase.js") {
    & node test-supabase.js
} else {
    Write-Host "‚ö†Ô∏è  test-supabase.js no encontrado, probando con Prisma..." -ForegroundColor Yellow
    
    try {
        Write-Host "üì¶ Generando Prisma Client..." -ForegroundColor Cyan
        & npx prisma generate
        
        Write-Host "üîå Probando conexi√≥n..." -ForegroundColor Cyan
        & npx prisma db push --accept-data-loss
        
        Write-Host "‚úÖ ¬°Conexi√≥n exitosa!" -ForegroundColor Green
    }
    catch {
        Write-Host "‚ùå Error de conexi√≥n: $($_.Exception.Message)" -ForegroundColor Red
        Write-Host "üí° Verifica que la contrase√±a sea correcta" -ForegroundColor Yellow
        exit 1
    }
}

Write-Host ""
Write-Host "üå± Ejecutando seed..." -ForegroundColor Blue
try {
    & npm run db:seed
    Write-Host "‚úÖ Datos de ejemplo cargados" -ForegroundColor Green
}
catch {
    Write-Host "‚ö†Ô∏è  Error ejecutando seed: $($_.Exception.Message)" -ForegroundColor Yellow
    Write-Host "üí° Puedes ejecutar manualmente: npm run db:seed" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üéâ ¬°Configuraci√≥n completada!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Pr√≥ximos pasos:" -ForegroundColor Blue
Write-Host "   1. Ejecuta: npm run dev" -ForegroundColor Cyan
Write-Host "   2. Ve a http://localhost:3001" -ForegroundColor Cyan
Write-Host "   3. Inicia sesi√≥n con admin@phorencial.com / admin123" -ForegroundColor Cyan
Write-Host ""
Write-Host "üîí Recuerda configurar Row Level Security en Supabase:" -ForegroundColor Yellow
Write-Host "   Ve a SQL Editor y ejecuta las pol√≠ticas de SUPABASE-SETUP.md" -ForegroundColor Yellow
